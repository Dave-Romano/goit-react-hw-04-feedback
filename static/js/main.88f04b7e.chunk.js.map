{"version":3,"sources":["components/controls/ControlsStyled.js","components/controls/Controls.js","components/statistic/StatisticStyled.js","components/statistic/Statistic.js","components/App.js","index.js"],"names":["ControlsStyled","styled","div","Controls","setGood","setNeutral","setNegative","good","neutral","negative","className","type","name","onClick","StatisticStyled","Statistic","total","percent","App","useState","setTotal","setPercent","useEffect","parseInt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OACaA,EAAiBC,IAAOC,IAAV,yF,OCiDZC,EA/CE,SAAC,GAOX,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,WACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACAC,EACI,EADJA,SAEA,OACE,eAACT,EAAD,WACE,oBAAIU,UAAU,QAAd,mCACA,qBAAIA,UAAU,UAAd,UACE,wBACEC,KAAK,SACLC,KAAK,OACLF,UAAU,UACVG,QAAS,kBAAMT,EAAQG,EAAO,IAJhC,kBAQA,wBACEI,KAAK,SACLC,KAAK,UACLF,UAAU,aACVG,QAAS,kBAAMR,EAAWG,EAAU,IAJtC,qBAQA,wBACEG,KAAK,SACLC,KAAK,WACLF,UAAU,SACVG,QAAS,kBAAMP,EAAYG,EAAW,IAJxC,wBC9BKK,EAAkBb,IAAOC,IAAV,yFC6Bba,EA3BG,SAAC,GAAiD,IAA/CR,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,SAAUO,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACnD,OACE,eAACH,EAAD,WACE,oBAAIJ,UAAU,QAAd,uBACW,IAAVM,EACC,kDAEA,+BACE,6CAAcT,KACd,gDAAiBC,KACjB,iDAAkBC,KAClB,8CAAeO,KACf,2DAA4BC,EAA5B,cCgCKC,EApCH,WACV,MAAwBC,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaH,EAAb,KACA,EAA8Be,mBAAS,GAAvC,mBAAOX,EAAP,KAAgBH,EAAhB,KACA,EAAgCc,mBAAS,GAAzC,mBAAOV,EAAP,KAAiBH,EAAjB,KACA,EAA0Ba,mBAAS,GAAnC,mBAAOH,EAAP,KAAcI,EAAd,KACA,EAA8BD,mBAAS,GAAvC,mBAAOF,EAAP,KAAgBI,EAAhB,KAWA,OAJAC,qBAAU,WAJRF,EAASb,EAAOC,EAAUC,GAC1BY,EAAWE,SAAUhB,GAAQA,EAAOC,EAAUC,GAAa,QAK1D,CAACF,EAAMC,EAASC,IAGjB,qCACE,cAAC,EAAD,CACEL,QAASA,EACTC,WAAYA,EACZC,YAAaA,EACbC,KAAMA,EACNC,QAASA,EACTC,SAAUA,IAEZ,cAAC,EAAD,CACEF,KAAMA,EACNC,QAASA,EACTC,SAAUA,EACVO,MAAOA,EACPC,QAASA,QCpCjBO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.88f04b7e.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nexport const ControlsStyled = styled.div`\r\n  margin-left: 30px;\r\n  .title {\r\n    font-size: 50px;\r\n  }\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { ControlsStyled } from \"./ControlsStyled\";\r\n\r\nconst Controls = ({\r\n  setGood,\r\n  setNeutral,\r\n  setNegative,\r\n  good,\r\n  neutral,\r\n  negative,\r\n}) => {\r\n  return (\r\n    <ControlsStyled>\r\n      <h1 className=\"title\">Please leave feedback</h1>\r\n      <ul className=\"bt-list\">\r\n        <button\r\n          type=\"button\"\r\n          name=\"good\"\r\n          className=\"bt-good\"\r\n          onClick={() => setGood(good + 1)}\r\n        >\r\n          good\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          name=\"neutral\"\r\n          className=\"bt-neutral\"\r\n          onClick={() => setNeutral(neutral + 1)}\r\n        >\r\n          neutral\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          name=\"negative\"\r\n          className=\"bt-bad\"\r\n          onClick={() => setNegative(negative + 1)}\r\n        >\r\n          bad\r\n        </button>\r\n      </ul>\r\n    </ControlsStyled>\r\n  );\r\n};\r\n\r\nControls.propTypes = {\r\n  setGood: PropTypes.func.isRequired,\r\n  setNeutral: PropTypes.func.isRequired,\r\n  setNegative: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Controls;\r\n","import styled from \"styled-components\";\r\nexport const StatisticStyled = styled.div`\r\n  margin-left: 30px;\r\n  .title {\r\n    font-size: 50px;\r\n  }\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { StatisticStyled } from \"./StatisticStyled\";\r\n\r\nconst Statistic = ({ good, neutral, negative, total, percent }) => {\r\n  return (\r\n    <StatisticStyled>\r\n      <h1 className=\"title\">Statistic</h1>\r\n      {total === 0 ? (\r\n        <p>No feedback given</p>\r\n      ) : (\r\n        <ul>\r\n          <li>{`Good: ${good}`}</li>\r\n          <li>{`Neutral :${neutral}`}</li>\r\n          <li>{`negative: ${negative}`}</li>\r\n          <li>{`Total: ${total}`}</li>\r\n          <li>{`Possitive Feedback: ${percent}%`}</li>\r\n        </ul>\r\n      )}\r\n    </StatisticStyled>\r\n  );\r\n};\r\n\r\nStatistic.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  negative: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  percent: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistic;\r\n","import { useState, useEffect } from \"react\";\r\nimport Controls from \"./controls/Controls\";\r\nimport Statistic from \"./statistic/Statistic\";\r\n\r\n//custom hook\r\n// const useTotal = (numbers) => {\r\n//   const [total, setTotal] = useState(0);\r\n//   setTotal(numbers.reduce((prev, number) => prev + number, 0));\r\n//   return total;\r\n// };\r\n\r\nconst App = () => {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [negative, setNegative] = useState(0);\r\n  const [total, setTotal] = useState(0);\r\n  const [percent, setPercent] = useState(0);\r\n\r\n  const calculation = () => {\r\n    setTotal(good + neutral + negative);\r\n    setPercent(parseInt((good / (good + neutral + negative)) * 100));\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculation();\r\n  }, [good, neutral, negative]);\r\n\r\n  return (\r\n    <>\r\n      <Controls\r\n        setGood={setGood}\r\n        setNeutral={setNeutral}\r\n        setNegative={setNegative}\r\n        good={good}\r\n        neutral={neutral}\r\n        negative={negative}\r\n      />\r\n      <Statistic\r\n        good={good}\r\n        neutral={neutral}\r\n        negative={negative}\r\n        total={total}\r\n        percent={percent}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"node_modules/modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}